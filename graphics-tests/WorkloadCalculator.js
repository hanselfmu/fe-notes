function WorkloadCalculator(r,o,e,t,a,c,i){this.startingLoad=r,this.currentWorkload=this.startingLoad,this.previousWorkload=0,this.beforePeakIncrease=o,this.afterPeakIncrease=e,this.peakDetermineDropRatio=a?.01*a:.01,this.targetScoreDropRatio=t?.01*t:.3,this.workloadScoreAcceptVariance=c?c:.03,this.minScoreRepeats=i?i:2,this.scoreBufferSize=6,this.maxScoreRepeats=80,this.peakScoreFound=!1,this.peakScore=-1,this.peakScoreWorkload=-1,this.peakScoreVariance=-1,this.lowScoreFound=!1,this.lowScore=-1,this.lowScoreWorkload=-1,this.lowScoreVariance=-1,this.targetScoreFound=!1,this.targetScore=-1,this.targetScoreWorkload=-1,this.targetScoreVariance=-1,this.currentScores=[],this.scoreBufferIndex=0,this.currentRepeats=0}var isScoreAccepted=function(r,o,e,t,a){return t>e?!1:e>=a?!0:o>=r}
WorkloadCalculator.prototype.guessWorkloadChange=function(r,o,e){if(this.targetScoreFound)return r
if(this.peakScoreFound){var t=e/this.peakScore,a=1-this.targetScoreDropRatio
return t/a>1.2?o:r}var c=Math.max(Math.min((e-100)/1e3,1),0)
return c*o+(1-c)*r}
var getSign=function(r){return 0>r?-1:1}
WorkloadCalculator.prototype.getWorkloadBacktrack=function(r){var o=4,e=.05,t=this.peakScore*(1-this.targetScoreDropRatio),a=1-r/t,c=Math.abs(r-t),i=getSign(a)
return this.movedToLinearSearch||Math.abs(a)<e||o>=c?(this.movedToLinearSearch=!0,this.linearSearchDirection=-i,this.currentWorkload-i):this.backTrackMinWorkload?(0>i?this.backTrackMinWorkload<this.currentBackTrackWorkload&&(this.backTrackMinWorkload=this.currentBackTrackWorkload):this.backTrackMaxWorkload>this.currentBackTrackWorkload&&(this.backTrackMaxWorkload=this.currentBackTrackWorkload),this.currentBackTrackWorkload=.5*this.backTrackMinWorkload+.5*this.backTrackMaxWorkload):(this.backTrackMinWorkload=this.lastWorkloadBeforeLow?this.lastWorkloadBeforeLow:this.peakScoreWorkload,this.backTrackMaxWorkload=this.lowScoreWorkload,this.currentBackTrackWorkload=.5*this.backTrackMinWorkload+.5*this.backTrackMaxWorkload,this.currentBackTrackWorkload)},WorkloadCalculator.prototype.isScoreCloseEnoughToTarget=function(r){if(!this.movedToLinearSearch)return!1
var o=getSign(r-this.peakScore*(1-this.targetScoreDropRatio))
return o*this.linearSearchDirection>=0}
var calculateNormalizedStandardDeviation=function(r){for(var o=calculateMean(r),e=0,t=0;t<r.length;++t){var a=r[t]-o
e+=a*a}return Math.sqrt(e/r.length)/o},calculateMean=function(r){if(0==r.length)return 0
for(var o=0,e=0;e<r.length;++e)o+=r[e]
return o/r.length}
WorkloadCalculator.prototype.getScores=function(){return{target:{score:this.targetScore,workload:this.targetScoreWorkload,variance:this.targetScoreVariance},low:{score:this.lowScore,workload:this.lowScoreWorkload,variance:this.lowScoreVariance},peak:{score:this.peakScore,workload:this.peakScoreWorkload,variance:this.peakScoreVariance}}},WorkloadCalculator.prototype.isTargetScoreReceived=function(){return this.targetScoreFound},WorkloadCalculator.prototype.getWorkload=function(){return this.currentWorkload},WorkloadCalculator.prototype.runsDoneForCurrentWorkload=function(){return this.currentRepeats},WorkloadCalculator.prototype.reportCurrentWorkloadScore=function(r){this.currentScores.length<this.scoreBufferSize?this.currentScores.push(r):(this.currentScores[this.scoreBufferIndex]=r,this.scoreBufferIndex=(this.scoreBufferIndex+1)%this.currentScores.length),++this.currentRepeats
var o=calculateNormalizedStandardDeviation(this.currentScores)
return isScoreAccepted(o,this.workloadScoreAcceptVariance,this.currentRepeats,this.minScoreRepeats,this.maxScoreRepeats)?(this.processScore(calculateMean(this.currentScores),o),this.currentScores.length=0,this.scoreBufferIndex=0,this.currentRepeats=0,!0):!1},WorkloadCalculator.prototype.processScore=function(r,o){if(!this.targetScoreFound){if(this.peakScoreFound||(r>=this.peakScore&&(this.peakScore=r,this.peakScoreWorkload=this.currentWorkload,this.peakScoreVariance=o),1-r/this.peakScore>=this.peakDetermineDropRatio?this.peakScoreFound=!0:this.peakWorkload=this.currentWorkload),this.peakScoreFound&&!this.lowScoreFound){var e=1-r/this.peakScore
e>this.targetScoreDropRatio?(this.lowScoreFound=!0,this.lowScore=r,this.lowScoreVariance=o,this.lowScoreWorkload=this.currentWorkload):this.lastWorkloadBeforeLow=this.currentWorkload}this.peakScoreFound&&this.lowScoreFound&&this.isScoreCloseEnoughToTarget(r)&&(this.targetScoreFound=!0,this.targetScore=r,this.targetScoreWorkload=this.currentWorkload,this.targetScoreVariance=o),this.previousWorkload=this.currentWorkload,this.peakScoreFound?this.lowScoreFound?(this.currentWorkload=this.getWorkloadBacktrack(r),Math.abs(this.previousWorkload-this.currentWorkload)<1&&(this.movedToLinearSearch=!0)):this.currentWorkload+=this.guessWorkloadChange(this.afterPeakIncrease,3*this.afterPeakIncrease,r):this.currentWorkload+=this.guessWorkloadChange(this.beforePeakIncrease,3*this.beforePeakIncrease,r)}}
